You are tasked with parsing proposed changes to organizational records and converting them into a specific structured format. This system processes natural language change descriptions and converts them into encoded update strings that can be processed programmatically.

## Encoding Format Rules

**Basic Structure:**
- Start with "Update:"
- List changes to fields separated by bars (|)
- Always end with "$"
- Use format: field_name.operation==value

**Field Categories:**

*Non-repeating fields:* status, established, geonames, isni.preferred, wikidata.preferred, fundref.preferred, grid.preferred,  ror_display

*Repeating fields:* domains, fundref.all, grid.all, isni.all, wikidata.all, website, wikipedia, acronym, alias, label, types

**Important:** You must ignore any updates to fields not listed above.

**Change Operations:**
- `add`: adds values to a field
- `delete`: removes values from a field  
- `replace`: wipes field data and replaces with new value
- For multiple values in repeating fields: separate with semicolons (Value1;Value2)

## Field-Specific Rules

**Names and Labels (Critical):**
When the record name/display name changes, you MUST apply this logic:
1. `ror_display.replace==[new name]`
2. For labels: If the new display name corresponds to an existing label, no label changes are needed. Otherwise, use `label.replace==[new name and any other labels being kept]`
3. `alias.add==[old display name and any old labels being replaced]`
4. When deleting labels: reference only the label value itself
5. By default: add all old names as aliases unless they're explicitly being kept as labels

**External IDs (wikidata, isni, fundref, grid):**
- Always use "preferred" and "all" suffixes
- If ID type doesn't exist in record: add to both preferred and all fields
- If ID type exists in record: add to all field unless preferred is explicitly stated
- If preferred is explicitly stated: replace preferred and add to all

**Other Fields:**
- `website`: Always use "replace", never "add"
- `types`: Valid values are Education, Healthcare, Company, Archive, Nonprofit, Government, Facility, Other
- `types`: If adding fundref ID and "funder" not in types, add "funder" to types
- `status`: Valid values are active, inactive, withdrawn (use "inactive" for closed/merged orgs, "withdrawn" for duplicates)
- `geonames`: For address changes, use exact text "geonames.replace==[supply Geonames ID for the new location here]" unless specific Geonames ID is provided

**Special Processing:**
- If input contains "Curator review:", process only changes described after that phrase
- Use only raw values, never reference list/dictionary objects
- Do NOT process relationship updates - ignore them completely

## Analysis Instructions

Before providing your final encoding, systematically work through the proposed changes in <systematic_processing> tags. Follow these steps exactly:

1. **Quote relevant record data:** Write down the current values from the record that are relevant to the proposed changes (e.g., current ror_display, current labels, current aliases, etc.).

2. **Quote the change description:** Write out the exact change description you need to process.

3. **Check for "Curator review":** If present, identify and focus only on changes after that phrase.

4. **Parse individual changes:** List each individual change being requested, numbering them (1, 2, 3, etc.).

5. **Validate each change:** For each numbered change, state which field it affects and whether that field is in the valid field lists. If invalid, note that you'll ignore it. It's OK for this section to be quite long.

6. **Determine operations:** For each valid change, determine the appropriate operation (add, delete, replace) and apply relevant field-specific rules.

7. **Write provisional operations:** Write out what each encoded operation should look like.

8. **Consolidate operations:** Review all your provisional operations and check if you have multiple operations for the same field. If you have both replace and add operations for the same field, consolidate them into a single replace operation that includes all the values.

9. **Apply special rules:** Double-check name changes (trigger name/label/alias rules), external ID logic, type validation, and funder addition logic.

10. **Format final output:** Combine all final operations with | separators and terminate with $.

## Output Format

After your systematic processing, provide your final answer in exactly this format:

```
Update: [your encoded changes separated by | symbols]$
```

Example:
```
Update: ror_display.replace==New University Name | label.replace==New University Name;Secondary Label | alias.add==Old University Name | types.add==Education$
```

Now analyze the provided record and change description. Your final output should consist only of the encoded update string. Here is the organizational record you'll be working with and the the description of the proposed change you need to process: